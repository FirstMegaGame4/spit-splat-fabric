import com.mmodding.gradle.api.EnvironmentTarget

plugins {
	id 'com.mmodding.gradle' version '0.0.9'
	id 'fabric-loom' version '1.8-SNAPSHOT'
	id 'maven-publish'
}

version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name 'GeckoLib'
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
		content {
			includeGroup("software.bernie.geckolib")
		}
	}
}

fabricApi {
	configureDataGeneration()
}

mmodding {
	configureFabricModJson {
		name = "Spit Splat"
		namespace = "spit_splat"
		description = "The Spit Splat is a cute and tameable mod that will spawn on you at the slightest opportunity!"
		license = "Code: PolyForm-Shield-1.0.0\\nAssets: All Rights Reserved"
		icon = "assets/spit_splat/icon.png"
		addAuthor("FirstMegaGame4")
		addAuthor("Paraste")
		withContact {
			it.homepage = "https://modrinth.com/mod/spit-splat"
			it.sources = "https://github.com/FirstMegaGame4/spitsplat-fabric"
			it.issues = "https://github.com/FirstMegaGame4/spitsplat-fabric/issues"
		}
		environment = EnvironmentTarget.ANY
		withEntrypoints {
			it.init("fr.firstmegagame4.spitsplat.SpitSplat")
			it.client("fr.firstmegagame4.spitsplat.client.SpitSplatClient")
			it.custom("fabric-datagen", "fr.firstmegagame4.spitsplat.SpitSplatDataGenerator")
		}
		addMixin("spit_splat.mixins.json")
		withDependencies {
			it.javaVersion = ">=" + 17
			it.minecraftVersion = "~" + project.minecraft_version
			it.fabricLoaderVersion = ">=" + project.loader_version
			it.fabricApiVersion = "*"
			it.addDependency("geckolib", ">=" + project.geckolib_version + "-")
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// GeckoLib API
	include(modImplementation "software.bernie.geckolib:geckolib-fabric-${project.minecraft_version}:${project.geckolib_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE.md") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
